class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true; //root is symmetrical if the head of the root is null.
        }
        return Symmetry(root.left, root.right); //we're going to iterate through the left and right nodes simultaneously
    }

    static boolean Symmetry(TreeNode left, TreeNode right) {
        if (left == null && right == null) {
            return true; //if left & right are null we consider the null symmetrical but returning tells us there is nothing to be recursed
        }
        if (left != null && right != null && left.val == right.val) {
            return Symmetry(left.left, right.right) && Symmetry(left.right, right.left); //want to compare the symmetrical parts, if both are true we return true
        }
        return false; //false otherwise
    }
}
